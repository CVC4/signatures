; Type checking:

; Return the sort of term t, (fail sort) means not well-sorted
(program type_check ((t term)) sort
  (match t
    ; [1] uninterpreted function symbol
    ((var n s) s)
    ((bvar n s) s)
    ((apply t1 t2)
      (match t1
        ; [2] parametric interpreted function symbols
        (f_= (arrow (type_check t2) Bool))
        ; ...
        ; [3] function applications of non-parametric function symbols
        (default 
          (let s1 (type_check t1)
          (match s1
            ; application of function
            ((arrow sarg sreturn) 
                (let s2 (type_check t2)
                (ifequal s2 sarg 
                  sreturn 
                  ; fail: function applied to terms of different sorts
                  (fail sort))))
            ; fail: application of non-function
            (default (fail sort)))))))
    ; [4] quantifiers are indexed by their universal variable
    ((forall n s) (arrow Bool Bool))
    ; [5] all non-parametric interpreted function symbols
    (true Bool)
    (false Bool)
    ; ...
    ; fail: unknown term
    (default (fail sort))
  )
)
(program well_typed ((t term)) Ok
  (do (type_check t) ok))
